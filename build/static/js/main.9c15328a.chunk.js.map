{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/FeedBackOptions/FeedBackOptions.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","feedbackPercentage","className","Section","title","children","defaultProps","FeedbackOptions","options","changeFeedback","map","option","onClick","toLowerCase","toString","App","useState","setGood","setNeutral","setBad","countTotalFeedback","feedback","prevState","Math","ceil","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUA0BeA,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAU,mBAAf,UACE,oBAAGA,UAAU,wBAAb,oBAA6CL,KAC7C,oBAAGK,UAAU,wBAAb,uBAAgDJ,KAChD,oBAAGI,UAAU,wBAAb,mBAA4CH,KAC5C,oBAAGG,UAAU,wBAAb,qBAA8CF,KAC9C,oBAAGE,UAAU,wBAAb,iCACuBD,SCRvBE,G,MAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,yBAASH,UAAU,UAAnB,SACE,gCACE,oBAAIA,UAAU,iBAAd,SAAgCE,IAC/BC,SAMTF,EAAQG,aAAe,CACrBF,MAAO,KAQMD,QCCAI,G,MArBS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAClC,OACE,qBAAKP,UAAU,oBAAf,SACGM,EAAQE,KAAI,SAACC,GAAD,OACX,wBACET,UAAU,mBACVU,QAAS,kBAAMH,EAAeE,EAAOE,gBAFvC,SAKGF,GAFIA,EAAOG,mB,MC6CPC,MAlDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOjB,EAAP,KAAYoB,EAAZ,KAcMC,EAAqB,WACzB,OAAOvB,EAAOC,EAAUC,GAS1B,OACE,sBAAKG,UAAU,sBAAf,UACE,oBAAIA,UAAU,kBAAd,uBACA,cAAC,EAAD,CAASE,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,QANP,CAAC,OAAQ,UAAW,OAMKC,eA1BlB,SAACY,GACL,SAAbA,GACFJ,GAAQ,SAACK,GAAD,OAAeA,EAAY,KAEpB,YAAbD,GACFH,GAAW,SAACI,GAAD,OAAeA,EAAY,KAEvB,QAAbD,GACFF,GAAO,SAACG,GAAD,OAAeA,EAAY,UAoBlC,cAAC,EAAD,CAASlB,MAAM,aAAf,SACGgB,IAAuB,EACtB,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,IACPnB,mBAlBDsB,KAAKC,KAAa,IAAP3B,EAAcuB,OAqB1B,wDC5CVK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c15328a.chunk.js","sourcesContent":["import React from 'module';\nimport PropTypes from 'prop-types';\nimport './Statistics.css';\n\nconst Statistics = ({ good, neutral, bad, total, feedbackPercentage }) => {\n  return (\n    <div className=\"statistics__list\">\n      <p className=\"statistics__list-item\">Good : {good}</p>\n      <p className=\"statistics__list-item\">Neutral : {neutral}</p>\n      <p className=\"statistics__list-item\">Bad : {bad}</p>\n      <p className=\"statistics__list-item\">Total : {total}</p>\n      <p className=\"statistics__list-item\">\n        Positive feedback : {feedbackPercentage}\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Section.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className=\"section\">\n      <div>\n        <h2 className=\"section__title\">{title}</h2>\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: ' ',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./FeedBackOptions.css\";\n\nconst FeedbackOptions = ({ options, changeFeedback }) => {\n  return (\n    <div className=\"button__container\">\n      {options.map((option) => (\n        <button\n          className=\"feedback__button\"\n          onClick={() => changeFeedback(option.toLowerCase())}\n          key={option.toString()}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  changeFeedback: PropTypes.func,\n  options: PropTypes.node,\n};\n\nexport default FeedbackOptions;\n","import React, { useState } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedBackOptions/FeedBackOptions\";\nimport \"./App.css\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const changeFeedback = (feedback) => {\n    if (feedback === \"good\") {\n      setGood((prevState) => prevState + 1);\n    }\n    if (feedback === \"neutral\") {\n      setNeutral((prevState) => prevState + 1);\n    }\n    if (feedback === \"bad\") {\n      setBad((prevState) => prevState + 1);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countFeedbackPercentage = () => {\n    return Math.ceil((good * 100) / countTotalFeedback());\n  };\n\n  const options = [\"Good\", \"Neutral\", \"Bad\"];\n\n  return (\n    <div className=\"feedback__container\">\n      <h1 className=\"feedback__title\">Feedbacks</h1>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} changeFeedback={changeFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            feedbackPercentage={countFeedbackPercentage()}\n          />\n        ) : (\n          <p>No feedback given</p>\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}